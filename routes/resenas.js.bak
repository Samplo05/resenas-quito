const express = require('express');
const router = express.Router();
const multer = require('multer');
const Resena = require('../models/Resena');

// Configuración de almacenamiento para imágenes
const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, 'uploads/'); // Carpeta donde se guardan las imágenes
  },
  filename: function (req, file, cb) {
    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);
    const extension = file.originalname.split('.').pop();
    cb(null, file.fieldname + '-' + uniqueSuffix + '.' + extension);
  }
});

const upload = multer({ storage: storage });


// ✅ POST - Guardar nueva reseña
router.post('/', upload.single('imagen'), async (req, res) => {
  try {
    const nuevaResena = new Resena({
      nombre: req.body.nombre,
      direccion: req.body.direccion,
      comentario: req.body.comentario,
      puntuacion: req.body.puntuacion,
      imagen: req.file ? `/uploads/${req.file.filename}` : null
    });

    const guardada = await nuevaResena.save();
    res.status(201).json(guardada);
  } catch (error) {
    console.error('Error al guardar reseña:', error);
    res.status(500).json({ mensaje: 'Error al guardar reseña' });
  }
});


// ✅ GET - Obtener todas las reseñas
router.get('/', async (req, res) => {
  try {
    const resenas = await Resena.find().sort({ createdAt: -1 });
    res.json(resenas);
  } catch (error) {
    console.error('Error al obtener reseñas:', error);
    res.status(500).json({ mensaje: 'Error al obtener reseñas' });
  }
});


// ✅ DELETE - Borrar una reseña por ID
router.delete('/:id', async (req, res) => {
  try {
    const borrada = await Resena.findByIdAndDelete(req.params.id);
    if (!borrada) {
      return res.status(404).json({ mensaje: 'Reseña no encontrada' });
    }
    res.json({ mensaje: 'Reseña eliminada correctamente' });
  } catch (error) {
    console.error('Error al borrar reseña:', error);
    res.status(500).json({ mensaje: 'Error al borrar reseña' });
  }
});

module.exports = router;
