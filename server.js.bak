require('dotenv').config();

const express = require('express');
const path = require('path');
const mongoose = require('mongoose');
const cors = require('cors');


const cloudinary = require('cloudinary').v2;
const { CloudinaryStorage } = require('multer-storage-cloudinary');
const multer = require('multer');

const app = express();
const PORT = process.env.PORT || 3000;

// Configuraci√≥n Cloudinary
cloudinary.config({
  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,
  api_key: process.env.CLOUDINARY_API_KEY,
  api_secret: process.env.CLOUDINARY_API_SECRET,
});

// Multer + Cloudinary
const storage = new CloudinaryStorage({
  cloudinary: cloudinary,
  params: {
    folder: 'sabores-de-quito',
    allowed_formats: ['jpg', 'jpeg', 'png', 'gif'],
  },
});
const upload = multer({ storage });

// MongoDB
mongoose.connect(process.env.MONGODB_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
})
.then(() => console.log('‚úÖ Conectado a MongoDB'))
.catch((err) => console.error('‚ùå Error de conexi√≥n:', err));

// Model
const Resena = require('./models/Resena');
const router = express.Router(); // Creo que es esto


// Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(express.static(path.join(__dirname, 'public')));


// API
const resenasRoutes = require('./routes/resenas');
app.use('/api/resenas', resenasRoutes);

// P√°gina principal
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'principal.html'));
});

// Iniciar servidor
app.listen(PORT, () => {
  console.log(`üöÄ Servidor escuchando en http://localhost:${PORT}`);
});

// Obtener una rese√±a espec√≠fica por ID
router.get('/resenas/:id', async (req, res) => {
  try {
    const resena = await Resena.findById(req.params.id);
    if (!resena) {
      return res.status(404).json({ mensaje: 'Rese√±a no encontrada' });
    }
    res.json(resena);
  } catch (error) {
    console.error('Error al obtener rese√±a:', error);
    res.status(500).json({ mensaje: 'Error al obtener la rese√±a' });
  }
});

